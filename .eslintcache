[{"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\index.js":"1","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\App.js":"2","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Song\\Song.jsx":"3","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Artist\\Artist.jsx":"4","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Album\\Album.jsx":"5","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Home\\Home.jsx":"6","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\NavHeader\\NavHeader.jsx":"7","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleMusic\\SingleMusic.jsx":"8","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleAlbum\\SingleAlbum.jsx":"9","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleArtist\\SingleArtist.jsx":"10","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Footer\\Footer.jsx":"11","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\context.js":"12","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\key.js":"13","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Loading\\Loading.jsx":"14","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Search\\Search.jsx":"15","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\utilities.js":"16","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\SearchResult\\SearchResult.jsx":"17"},{"size":286,"mtime":1612450869473,"results":"18","hashOfConfig":"19"},{"size":1153,"mtime":1617315278802,"results":"20","hashOfConfig":"19"},{"size":4056,"mtime":1616510003683,"results":"21","hashOfConfig":"19"},{"size":148,"mtime":1615291430836,"results":"22","hashOfConfig":"19"},{"size":146,"mtime":1612446466093,"results":"23","hashOfConfig":"19"},{"size":4047,"mtime":1617314345340,"results":"24","hashOfConfig":"19"},{"size":855,"mtime":1614568199901,"results":"25","hashOfConfig":"19"},{"size":594,"mtime":1617314338647,"results":"26","hashOfConfig":"19"},{"size":421,"mtime":1617314442020,"results":"27","hashOfConfig":"19"},{"size":337,"mtime":1617314478450,"results":"28","hashOfConfig":"19"},{"size":250,"mtime":1614623726249,"results":"29","hashOfConfig":"19"},{"size":5218,"mtime":1617314820415,"results":"30","hashOfConfig":"19"},{"size":62,"mtime":1616527077211,"results":"31","hashOfConfig":"19"},{"size":801,"mtime":1615214739795,"results":"32","hashOfConfig":"19"},{"size":830,"mtime":1616673176529,"results":"33","hashOfConfig":"19"},{"size":2068,"mtime":1616508175302,"results":"34","hashOfConfig":"19"},{"size":323,"mtime":1617316290935,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"acd51i",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\index.js",[],["74","75"],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\App.js",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Song\\Song.jsx",["76","77"],"import React, { useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from './Song.module.css'\r\nimport Loading from '../../Components/Loading/Loading'\r\n\r\nimport { MusicContext } from '../../context'\r\nimport SingleMusic from '../../Components/SingleMusic/SingleMusic'\r\n\r\nimport img from '../../assets/load.png'\r\nexport default function Song() {\r\n  const { popularUS, popularUK, song, getMusic } = useContext(MusicContext)\r\n  const [homePopularUS] = popularUS\r\n  const [homePopularUK] = popularUK\r\n  const [music, setMusic] = song\r\n\r\n\r\n  const { musicID } = useParams()\r\n\r\n  useEffect(() => {\r\n    setMusic(null)\r\n      getMusic(musicID)\r\n  }, [musicID])\r\n  // console.log(music.coverImg)\r\n  // console.log(music)\r\n  return (\r\n    <div className={styles.container}>\r\n\r\n      <section className={styles.songInfo}>\r\n        <div\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(0,0,0,0.1), rgba(0,0,0,0.8)), url(${music ? music.coverImg : img}) `,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            width: '100%',\r\n            height: '70%'\r\n          }}\r\n          className={styles.songCover}>\r\n          <div className={styles.songTitle}>\r\n            <h1>{music ? music.title : <span className={styles.songTitleLoading}></span>}</h1>\r\n            <h3>{music ? music.artist : <span className={styles.songTitleLoading}></span>}</h3>\r\n          </div>\r\n        </div>\r\n        <div className={styles.songDetails}>\r\n          <p>\r\n            genre: <strong>{music ? music.genre : <span className={styles.songDetailsLoading}></span>}</strong><br />\r\n            album: <strong>{music ? music.album : <span className={styles.songDetailsLoading}></span>}</strong><br />\r\n            released: <strong>{music ? music.released : <span className={styles.songDetailsLoading}></span>}</strong><br />\r\n            label: <strong>{music ? music.label : <span className={styles.songDetailsLoading}></span>}</strong>\r\n\r\n          </p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className={styles.songLyrics}>\r\n        <div className={styles.lyricsInfo}>\r\n          <h2>{music ? music.title : <span className={styles.songTitleLoading}></span>}</h2>\r\n          <em>hint: get in the shower, you'll sound better</em>\r\n        </div>\r\n        <hr />\r\n        <div className={styles.lyricsBody}>\r\n          <div className={styles.lyricsContainer}>\r\n            <p>{\r\n              music ?\r\n                music.lyrics :\r\n                <>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                  <span className={styles.songDetailsLoading}></span>\r\n                </>\r\n            }\r\n            </p>\r\n          </div>\r\n          <div className={styles.lyricsFooter}>\r\n            <p><em> {music ? music.footer : <span className={styles.songTitleLoading}></span>}\r\n            </em></p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className={styles.popSongs}>\r\n        <h3>Popular songs</h3>\r\n        <div className={styles.popSongsContainer}>{\r\n          homePopularUS.length > 0 ?\r\n            homePopularUS.map(item => (\r\n              <SingleMusic\r\n                key={item.key}\r\n                songID={item.key}\r\n                title={item.title}\r\n                artist={item.subtitle}\r\n                image={item.image}\r\n                artistID={item.artistId} />\r\n            )) :\r\n            <Loading type=\"song\" />\r\n        }\r\n        </div>\r\n      </section>\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Artist\\Artist.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Album\\Album.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\Home\\Home.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\NavHeader\\NavHeader.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleMusic\\SingleMusic.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleAlbum\\SingleAlbum.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\SingleArtist\\SingleArtist.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Footer\\Footer.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\context.js",["78","79","80","81"],"import React, { createContext, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  shazamBaseUrl,\r\n  billboardBaseUrl,\r\n  formatSingleMusic,\r\n  formatDataShazam, \r\n  formatBillboardAlbum, \r\n  formatBillboardArtist, \r\n  constOptions1,\r\n  constOptions2,\r\n} from './utilities'\r\n\r\n\r\nexport const MusicContext = createContext(null);\r\n\r\nexport const MusicContextProvider = ({ children }) => {\r\n\r\n\r\n  // -------------SET STATE-------------\r\n\r\n  const [homePopularUS, setHomePopularUS] = useState([])\r\n  const [homePopularUK, setHomePopularUK] = useState([])\r\n  const [homePopularArtists, setHomePopularArtists] = useState([])\r\n  const [homePopularAlbums, setHomePopularAlbums] = useState([])\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const [music, setMusic] = useState(null)\r\n  const [artist, setArtist] = useState(null)\r\n  const [query, setQuery] = useState('');\r\n\r\n\r\n\r\n  // ---------------UseEffect for DATA NEEDED ON START ----------\r\n  \r\n  useEffect(() => {\r\n\r\n    const getSongsUS = async () => {\r\n      const options = {\r\n        ...constOptions1,\r\n        url: `${shazamBaseUrl}charts/track`,\r\n        params: {\r\n          locale: 'en-US',\r\n          listId: 'ip-country-chart-US',\r\n          pageSize: '14',\r\n          startFrom: '0'\r\n        }\r\n      }\r\n\r\n      const response = await axios.request(options)\r\n      try {\r\n        const returned = await response.data\r\n        setHomePopularUS(formatDataShazam(returned.tracks))\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    \r\n    const getSongsUK = async () => {\r\n      const options = {\r\n        ...constOptions1,\r\n        url: `${shazamBaseUrl}charts/track`,\r\n        params: {\r\n          locale: 'en-US',\r\n          listId: 'ip-country-chart-GB',\r\n          pageSize: '14',\r\n          startFrom: '0'\r\n        }\r\n      }\r\n\r\n      const response = await axios.request(options)\r\n      try {\r\n        const returned = await response.data\r\n        setHomePopularUK(formatDataShazam(returned.tracks))\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n\r\n    const getBillboardArtists = async () => {\r\n      const options = {\r\n        ...constOptions2,\r\n        url: `${billboardBaseUrl}artist-100`,\r\n        params: {\r\n          date: '2021-03-20',\r\n          range: '1-9'\r\n        }\r\n      }\r\n\r\n      const response = await axios.request(options)\r\n      try {\r\n        const returned = await response.data\r\n        setHomePopularArtists(formatBillboardArtist(returned.content))\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    const getBillboardAlbums = async () => {\r\n      const options = {\r\n        ...constOptions2,\r\n        url: `${billboardBaseUrl}billboard-200`,\r\n        params: {\r\n          date: '2021-03-20',\r\n          range: '1-9'\r\n        }\r\n      }\r\n\r\n      const response = await axios.request(options)\r\n      try {\r\n        const returned = await response.data\r\n        setHomePopularAlbums(formatBillboardAlbum(returned.content))\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    // getSongsUS()\r\n    // getSongsUK()\r\n    // getBillboardArtists()\r\n    // getBillboardAlbums()\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  // ------------SEARCH QUERY FUNCTION -------------\r\n\r\n  const getQuery = async (query) => {\r\n    const options = {\r\n      ...constOptions1, \r\n      url: `${shazamBaseUrl}search`,\r\n      params: {\r\n        term: query,\r\n        locale: 'en-US',\r\n        offset: '0',\r\n        limit: '5'\r\n      }\r\n    }\r\n\r\n    const response = await axios.request(options)\r\n    try {\r\n      const returned = await response.data\r\n      console.log(returned)\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n\r\n  // ------------GET SINGLE MUSIC DETAILS--------------- \r\n\r\n  const getMusic = async (musicID) => {\r\n    const options = {\r\n      ...constOptions1,\r\n      url: `${shazamBaseUrl}songs/get-details`,\r\n      params: {\r\n        key: musicID,\r\n        locale: 'en-US'\r\n      }\r\n    }\r\n\r\n    const response = await axios.request(options)\r\n    try {\r\n      const returned = await response.data\r\n      setMusic(formatSingleMusic(returned))\r\n\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  // --------------GET SINGLE ARTIST DETAILS--------------\r\n\r\n  const getArtist = async (artistID) => {\r\n    const options = {\r\n      ...constOptions1,\r\n      url: `${shazamBaseUrl}songs/list-artist-top-tracks`,\r\n      params: {\r\n        id: artistID,\r\n        locale: 'en-US'\r\n      }\r\n    }\r\n\r\n    const response = await axios.request(options)\r\n    try{\r\n      const returned = await response.data\r\n      console.log(returned)\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  // const getAlbum = (albumID) => {\r\n\r\n  // } \r\n\r\n  return (\r\n    <MusicContext.Provider value={{\r\n      popularUS: [homePopularUS],\r\n      popularUK: [homePopularUK],\r\n      popularArtists: [homePopularArtists],\r\n      popularAlbums: [homePopularAlbums],\r\n      song: [music, setMusic],\r\n      artist: [artist, setArtist],\r\n      result: [searchResult, setSearchResult],\r\n      search: [query, setQuery],\r\n      getQuery,\r\n      getMusic,\r\n      getArtist,\r\n      // getAlbum\r\n    }}>\r\n      {children}\r\n    </MusicContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\key.js",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Loading\\Loading.jsx",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Components\\Search\\Search.jsx",["82","83"],"import React, {useContext} from 'react'\r\n\r\nimport {MusicContext} from '../../context'\r\n\r\nimport styles from './Search.module.css'\r\n\r\nexport default function Search() {\r\n\r\n\r\n  const {search} = useContext(MusicContext)\r\n  const [query, setQuery] = search\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value)\r\n  }\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.charCode === 13) {\r\n      setQuery(event.target.value)\r\n      event.target.value = \"\"\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={styles.mainContainer}>\r\n      <input \r\n      onChange={handleChange}\r\n      onKeyPress={handleKeyPress}\r\n      className={styles.searchInput} \r\n      placeholder=\"what are you looking for?\"\r\n      type=\"search\" \r\n      id=\"search\" />\r\n      <a className={styles.searchButton} >go</a>\r\n    </div>\r\n  )\r\n}","C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\utilities.js",[],"C:\\Users\\EBENEZER\\Desktop\\New folder\\React\\new-projects\\project1\\src\\Pages\\SearchResult\\SearchResult.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":13,"column":10,"nodeType":"90","messageId":"91","endLine":13,"endColumn":23},{"ruleId":"92","severity":1,"message":"93","line":22,"column":6,"nodeType":"94","endLine":22,"endColumn":15,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"96","line":38,"column":11,"nodeType":"90","messageId":"91","endLine":38,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":59,"column":11,"nodeType":"90","messageId":"91","endLine":59,"endColumn":21},{"ruleId":"88","severity":1,"message":"98","line":81,"column":11,"nodeType":"90","messageId":"91","endLine":81,"endColumn":30},{"ruleId":"88","severity":1,"message":"99","line":100,"column":11,"nodeType":"90","messageId":"91","endLine":100,"endColumn":29},{"ruleId":"88","severity":1,"message":"100","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":35,"column":7,"nodeType":"103","endLine":35,"endColumn":43},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'homePopularUK' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMusic' and 'setMusic'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'getSongsUS' is assigned a value but never used.","'getSongsUK' is assigned a value but never used.","'getBillboardArtists' is assigned a value but never used.","'getBillboardAlbums' is assigned a value but never used.","'query' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [getMusic, musicID, setMusic]",{"range":"109","text":"110"},[686,695],"[getMusic, musicID, setMusic]"]